<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7f86f531-bbae-4839-8dab-534724c645be" activeEnvironment="Default" name="MNS_MOCK_SERVICE" resourceRoot="${projectDir}" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:restMockService id="d13f7efb-9ffc-4d2a-857e-3c1d8ce0ff02" port="8083" path="/" host="MOTASIM-NB" name="MockServices" docroot=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.panels.mock.WsdlMockServiceDesktopPanel$LogListModel@maxSize">100</con:setting></con:settings><con:properties/><con:restMockAction name="verification" method="POST" resourcePath="/verification" id="768ccead-286c-4f8a-b8bb-b8558ff5e7a6"><con:settings/><con:defaultResponse>SUCCESS</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
def  MsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' //document:MsgId")
def  Acct  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[5]")
if ( Acct.matches( '1234567890')) 
{
    context.ResultResponse = "SUCCESS"

}
else if ( Acct.matches( 'USD:1234567890')) 
{
    context.ResultResponse = "SUCCESS"

}
else if ( Acct.matches( 'MGA:1234567890'))
{
    context.ResultResponse = "SUCCESS"

}

/*else if ( MsgId.substring(0,2).matches( '99')) 
{
    context.ResultResponse = "UserNotFound"
}*/
else if ( Acct.matches( '00123456789')) 
{
    context.ResultResponse = "BlockedUser"
}
else if ( Acct.matches( '11234567890')) 
{
    context.ResultResponse = "UserAccountNotFound"
}
else if ( Acct.matches( '1777564035')) 
{
    context.ResultResponse = "UserMobileNotFound"
}
else if ( Acct.matches( 'R1123456789111')) 
{
    context.ResultResponse = "UserWalletNotFound"
}
else if ( Acct.matches( '131234567890')) 
{
	sleep(90000)
    context.ResultResponse = "TimeOut"
}
else if ( Acct.matches( '777564035')) 
{
	
    context.ResultResponse = "SUCCESS"
}
else if ( Acct.matches( 'R123456789111')) 
{
	
    context.ResultResponse = "SUCCESS"
}
else 
{
	//sleep(30000)
     context.ResultResponse = "UserAccountNotFound"
     
}

</con:dispatchPath><con:response name="SUCCESS" id="d512e03a-61d9-49bc-9cae-1d018f126a29" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.CreDtTm2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:CreDtTm)[1]")
requestContext.MsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:MsgId)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[2]")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[1]")
requestContext.Id3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[5]")
requestContext.OrgnlId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[3]")
requestContext.PrtryAcct  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' //(document:Prtry)[1]")
requestContext.Id4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[5]")
requestContext.Prtry1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' //(document:Prtry)[1]")</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03"
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:acmt.024.001.03"
            xmlns="urn:iso:std:iso:20022:tech:xsd:verification_response">
	<header:AppHdr>
		<header:Fr>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id11}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:Fr>
		<header:To>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id12}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:To>
		<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
		<header:MsgDefIdr>acmt.024.001.03</header:MsgDefIdr>
		<header:CreDt>${today1}</header:CreDt>
		<header:Rltd>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id13}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id14}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
			<header:MsgDefIdr>acmt.023.001.03</header:MsgDefIdr>
			<header:CreDt>${CreDt}</header:CreDt>
		</header:Rltd>
	</header:AppHdr>
	<document:Document>
		<document:IdVrfctnRpt>
			<document:Assgnmt>
				<document:MsgId>${Id11}${today}</document:MsgId>
				<document:CreDtTm>${today1}</document:CreDtTm>
				<document:Assgnr>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgnr>
				<document:Assgne>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgne>
			</document:Assgnmt>
			<document:OrgnlAssgnmt>
				<document:MsgId>${MsgId}</document:MsgId>
				<document:CreDtTm>${CreDtTm2}</document:CreDtTm>
			</document:OrgnlAssgnmt>
			<document:Rpt>
				<document:OrgnlId>${OrgnlId}</document:OrgnlId>
				<document:Vrfctn>true</document:Vrfctn>
				<document:Rsn>
					<document:Prtry>SUCC</document:Prtry>
				</document:Rsn>
				<document:OrgnlPtyAndAcctId>
					<document:Acct>
						<document:Id>
							<document:Othr>
								<document:Id>${Id3}</document:Id>
								<document:SchmeNm>
									<document:Prtry>${PrtryAcct}</document:Prtry>
								</document:SchmeNm>
							</document:Othr>
						</document:Id>
					</document:Acct>
				</document:OrgnlPtyAndAcctId>
				<document:UpdtdPtyAndAcctId>
					<document:Pty>
						<document:Nm>MOTASIM SIDDIQUI</document:Nm>
					</document:Pty>
					<document:Acct>
						<document:Id>
							<document:Othr>
								<document:Id>${Id4}</document:Id>
								<document:SchmeNm>
									<document:Prtry>${Prtry1}</document:Prtry>
								</document:SchmeNm>
							</document:Othr>
						</document:Id>
					</document:Acct>
				</document:UpdtdPtyAndAcctId>
			</document:Rpt>
		</document:IdVrfctnRpt>
	</document:Document>
</FPEnvelope>]]></con:responseContent></con:response><con:response name="TimeOut" id="e7938c47-9033-4cc3-9457-ccb2354cc539" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.CreDtTm2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:CreDtTm)[1]")
requestContext.MsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:MsgId)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[2]")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[1]")
requestContext.Id3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[5]")
requestContext.OrgnlId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[3]")
requestContext.PrtryAcct  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' //(document:Prtry)[1]")
</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03"
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:acmt.024.001.03"
            xmlns="urn:iso:std:iso:20022:tech:xsd:verification_response">
	<header:AppHdr>
		<header:Fr>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id11}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:Fr>
		<header:To>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id12}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:To>
		<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
		<header:MsgDefIdr>acmt.024.001.03</header:MsgDefIdr>
		<header:CreDt>${today1}</header:CreDt>
		<header:Rltd>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id13}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id14}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
			<header:MsgDefIdr>acmt.023.001.03</header:MsgDefIdr>
			<header:CreDt>${CreDt}</header:CreDt>
		</header:Rltd>
	</header:AppHdr>
	<document:Document>
		<document:IdVrfctnRpt>
			<document:Assgnmt>
				<document:MsgId>${Id11}${today}</document:MsgId>
				<document:CreDtTm>${today2}</document:CreDtTm>
				<document:Assgnr>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgnr>
				<document:Assgne>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgne>
			</document:Assgnmt>
			<document:OrgnlAssgnmt>
				<document:MsgId>95122491345</document:MsgId>
				<document:CreDtTm>2019-03-27T18:08:30.053+03:00</document:CreDtTm>
			</document:OrgnlAssgnmt>
			<document:Rpt>
				<document:OrgnlId>04000000080861800095122491345</document:OrgnlId>
				<document:Vrfctn>false</document:Vrfctn>
				<document:Rsn>
					<document:Prtry>MISS</document:Prtry>
				</document:Rsn>
				<document:OrgnlPtyAndAcctId>
					<document:Acct>
						<document:Othr>
							<document:Id>${Id3}</document:Id>
							<document:SchmeNm>
								<document:Prtry>${PrtryAcct}</document:Prtry>
							</document:SchmeNm>
						</document:Othr>
					</document:Acct>
				</document:OrgnlPtyAndAcctId>
				<document:UpdtdPtyAndAcctId>
					<document:Pty>
						<document:Nm>Brian May</document:Nm>
					</document:Pty>
					<document:Acct>
						<document:Othr>
							<document:Id>R123456789111</document:Id>
							<document:SchmeNm>
								<document:Prtry>EWLT</document:Prtry>
							</document:SchmeNm>
						</document:Othr>
					</document:Acct>
				</document:UpdtdPtyAndAcctId>
			</document:Rpt>
		</document:IdVrfctnRpt>
	</document:Document>
</FPEnvelope>]]></con:responseContent></con:response><con:response name="UserAccountNotFound" id="0796bce9-905a-4f07-990a-392b7f2a750d" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.CreDtTm2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:CreDtTm)[1]")


requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.CreDtTm2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:CreDtTm)[1]")
requestContext.MsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:MsgId)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[2]")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[1]")
requestContext.Id3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[5]")
requestContext.OrgnlId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[3]")
requestContext.PrtryAcct  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' //(document:Prtry)[1]")</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03"
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:acmt.024.001.03"
            xmlns="urn:iso:std:iso:20022:tech:xsd:verification_response">
	<header:AppHdr>
		<header:Fr>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id11}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:Fr>
		<header:To>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id12}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:To>
		<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
		<header:MsgDefIdr>acmt.024.001.03</header:MsgDefIdr>
		<header:CreDt>${today1}</header:CreDt>
		<header:Rltd>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id13}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id14}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
			<header:MsgDefIdr>acmt.023.001.03</header:MsgDefIdr>
			<header:CreDt>${CreDt}</header:CreDt>
		</header:Rltd>
	</header:AppHdr>
	<document:Document>
		<document:IdVrfctnRpt>
			<document:Assgnmt>
				<document:MsgId>${Id11}${today}</document:MsgId>
				<document:CreDtTm>${today2}</document:CreDtTm>
				<document:Assgnr>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgnr>
				<document:Assgne>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgne>
			</document:Assgnmt>
			<document:OrgnlAssgnmt>
				<document:MsgId>${MsgId}</document:MsgId>
				<document:CreDtTm>${CreDtTm2}</document:CreDtTm>
			</document:OrgnlAssgnmt>
			<document:Rpt>
				<document:OrgnlId>${OrgnlId}</document:OrgnlId>
				<document:Vrfctn>false</document:Vrfctn>
				<document:Rsn>
					<document:Prtry>UNFN</document:Prtry>
				</document:Rsn>
				<document:OrgnlPtyAndAcctId>
					<document:Acct>
						<document:Othr>
							<document:Id>${Id3}</document:Id>
							<document:SchmeNm>
								<document:Prtry>${PrtryAcct}</document:Prtry>
							</document:SchmeNm>
						</document:Othr>
					</document:Acct>
				</document:OrgnlPtyAndAcctId>
			</document:Rpt>
		</document:IdVrfctnRpt>
	</document:Document>
</FPEnvelope>]]></con:responseContent></con:response><con:response name="BlockedUser" id="db635410-9d2b-457e-ba10-6e3736cc699f" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.CreDtTm2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:CreDtTm)[1]")
requestContext.MsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:MsgId)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[2]")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[1]")
requestContext.Id3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[5]")
requestContext.OrgnlId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[3]")
requestContext.PrtryAcct  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' //(document:Prtry)[1]")
</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03"
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:acmt.024.001.03"
            xmlns="urn:iso:std:iso:20022:tech:xsd:verification_response">
	<header:AppHdr>
		<header:Fr>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id11}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:Fr>
		<header:To>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id12}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:To>
		<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
		<header:MsgDefIdr>acmt.024.001.03</header:MsgDefIdr>
		<header:CreDt>${today1}</header:CreDt>
		<header:Rltd>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id13}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id14}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
			<header:MsgDefIdr>acmt.023.001.03</header:MsgDefIdr>
			<header:CreDt>${CreDt}</header:CreDt>
		</header:Rltd>
	</header:AppHdr>
	<document:Document>
		<document:IdVrfctnRpt>
			<document:Assgnmt>
				<document:MsgId>${Id11}${today}</document:MsgId>
				<document:CreDtTm>${today2}</document:CreDtTm>
				<document:Assgnr>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgnr>
				<document:Assgne>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgne>
			</document:Assgnmt>
			<document:OrgnlAssgnmt>
				<document:MsgId>${MsgId}</document:MsgId>
				<document:CreDtTm>${CreDtTm2}</document:CreDtTm>
			</document:OrgnlAssgnmt>
			<document:Rpt>
				<document:OrgnlId>${OrgnlId}</document:OrgnlId>
				<document:Vrfctn>false</document:Vrfctn>
				<document:Rsn>
					<document:Prtry>BLCK</document:Prtry>
				</document:Rsn>
				<document:OrgnlPtyAndAcctId>
					<document:Acct>
						<document:Othr>
							<document:Id>${Id3}</document:Id>
							<document:SchmeNm>
								<document:Prtry>${PrtryAcct}</document:Prtry>
							</document:SchmeNm>
						</document:Othr>
					</document:Acct>
				</document:OrgnlPtyAndAcctId>
			</document:Rpt>
		</document:IdVrfctnRpt>
	</document:Document>
</FPEnvelope>]]></con:responseContent></con:response><con:response name="UserMobileNotFound" id="169795c0-573c-4cf1-9d9d-1022ced3f297" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.CreDtTm2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:CreDtTm)[1]")
requestContext.MsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:MsgId)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[2]")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[1]")
requestContext.Id3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[5]")
requestContext.OrgnlId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[3]")
requestContext.PrtryAcct  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' //(document:Prtry)[1]")
</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03"
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:acmt.024.001.03"
            xmlns="urn:iso:std:iso:20022:tech:xsd:verification_response">
	<header:AppHdr>
		<header:Fr>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id11}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:Fr>
		<header:To>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id12}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:To>
		<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
		<header:MsgDefIdr>acmt.024.001.03</header:MsgDefIdr>
		<header:CreDt>${today1}</header:CreDt>
		<header:Rltd>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id13}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id14}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
			<header:MsgDefIdr>acmt.023.001.03</header:MsgDefIdr>
			<header:CreDt>${CreDt}</header:CreDt>
		</header:Rltd>
	</header:AppHdr>
	<document:Document>
		<document:IdVrfctnRpt>
			<document:Assgnmt>
				<document:MsgId>${Id11}${today}</document:MsgId>
				<document:CreDtTm>${today2}</document:CreDtTm>
				<document:Assgnr>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgnr>
				<document:Assgne>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgne>
			</document:Assgnmt>
			<document:OrgnlAssgnmt>
				<document:MsgId>${MsgId}</document:MsgId>
				<document:CreDtTm>${CreDtTm2}</document:CreDtTm>
			</document:OrgnlAssgnmt>
			<document:Rpt>
				<document:OrgnlId>${OrgnlId}</document:OrgnlId>
				<document:Vrfctn>false</document:Vrfctn>
				<document:Rsn>
					<document:Prtry>UNFN</document:Prtry>
				</document:Rsn>
				<document:OrgnlPtyAndAcctId>
					<document:Acct>
						<document:Othr>
							<document:Id>${Id3}</document:Id>
							<document:SchmeNm>
								<document:Prtry>${PrtryAcct}</document:Prtry>
							</document:SchmeNm>
						</document:Othr>
					</document:Acct>
				</document:OrgnlPtyAndAcctId>
			</document:Rpt>
		</document:IdVrfctnRpt>
	</document:Document>
</FPEnvelope>]]></con:responseContent></con:response><con:response name="UserWalletNotFound" id="7d5bd20a-ac78-495c-a9a6-ca671b8d60e8" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.CreDtTm2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:CreDtTm)[1]")
requestContext.MsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:MsgId)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[2]")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[1]")
requestContext.Id3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[5]")
requestContext.OrgnlId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' (//document:Id)[3]")
requestContext.PrtryAcct  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:acmt.023.001.03' //(document:Prtry)[1]")
</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03"
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:acmt.024.001.03"
            xmlns="urn:iso:std:iso:20022:tech:xsd:verification_response">
	<header:AppHdr>
		<header:Fr>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id11}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:Fr>
		<header:To>
			<header:FIId>
				<header:FinInstnId>
					<header:Othr>
						<header:Id>${Id12}</header:Id>
					</header:Othr>
				</header:FinInstnId>
			</header:FIId>
		</header:To>
		<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
		<header:MsgDefIdr>acmt.024.001.03</header:MsgDefIdr>
		<header:CreDt>${today1}</header:CreDt>
		<header:Rltd>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id13}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id14}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
			<header:MsgDefIdr>acmt.023.001.03</header:MsgDefIdr>
			<header:CreDt>${CreDt}</header:CreDt>
		</header:Rltd>
	</header:AppHdr>
	<document:Document>
		<document:IdVrfctnRpt>
			<document:Assgnmt>
				<document:MsgId>${Id11}${today}</document:MsgId>
				<document:CreDtTm>${today2}</document:CreDtTm>
				<document:Assgnr>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgnr>
				<document:Assgne>
					<document:Agt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:Agt>
				</document:Assgne>
			</document:Assgnmt>
			<document:OrgnlAssgnmt>
				<document:MsgId>${MsgId}</document:MsgId>
				<document:CreDtTm>${CreDtTm2}</document:CreDtTm>
			</document:OrgnlAssgnmt>
			<document:Rpt>
				<document:OrgnlId>${OrgnlId}</document:OrgnlId>
				<document:Vrfctn>false</document:Vrfctn>
				<document:Rsn>
					<document:Prtry>UNFN</document:Prtry>
				</document:Rsn>
				<document:OrgnlPtyAndAcctId>
					<document:Acct>
						<document:Othr>
							<document:Id>${Id3}</document:Id>
							<document:SchmeNm>
								<document:Prtry>${PrtryAcct}</document:Prtry>
							</document:SchmeNm>
						</document:Othr>
					</document:Acct>
				</document:OrgnlPtyAndAcctId>
			</document:Rpt>
		</document:IdVrfctnRpt>
	</document:Document>
</FPEnvelope>]]></con:responseContent></con:response></con:restMockAction><con:restMockAction name="/PushPayment" method="POST" resourcePath="/PushPayment" id="659d6b4b-2ac8-4ef6-933a-9bcd3572c21e"><con:settings/><con:defaultResponse>SUCCESS</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
def  MsgId  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
def  Acct  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Id)[8]")
if ( Acct.matches( '1234567890')) 
{
    context.ResultResponse = "SUCCESS"
}

else if ( Acct.matches( '777564035')) 
{
	
    context.ResultResponse = "REJECTED"
}
else if ( Acct.matches( 'R123456789111')) 
{
	
    context.ResultResponse = "SUCCESS"
}
else if ( Acct.matches( '131234567890')) 
{
	sleep(15000)
    context.ResultResponse = "TIMEOUT"
}
else 
{
	
     context.ResultResponse = "SUCCESS"
}

</con:dispatchPath><con:response name="SUCCESS" id="6969d39e-b23a-4c7c-a757-bf3f2cac3ee9" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.AccptncDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:AccptncDtTm")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[2]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Nm)[2]")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[1]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[4]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Prtry)[4]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Id)[8]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Prtry)[4]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:TxId")
</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:payment_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>${today1}</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.008.001.10</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>${Id11}${today}</document:MsgId>
					<document:CreDtTm>${today2}</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.008.001.10</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
				<document:TxInfAndSts>
					<document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
					<document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
					<document:TxSts>ACSC</document:TxSts>
					<document:AccptncDtTm>${AccptncDtTm}</document:AccptncDtTm>
					<document:OrgnlTxRef>
						<document:IntrBkSttlmAmt Ccy="MGA">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
						<document:Amt>
							<document:InstdAmt Ccy="MGA">${InstdAmt}</document:InstdAmt>
						</document:Amt>
						<document:Dbtr>
						<document:Pty>
							<document:Nm>${Nm}</document:Nm>
							<document:PstlAdr>
								<document:AdrLine>${AdrLine}</document:AdrLine>
							</document:PstlAdr>
							</document:Pty>
						</document:Dbtr>
						<document:DbtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id5}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry3}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:DbtrAcct>
						<document:CdtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id8}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry4}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:CdtrAcct>
					</document:OrgnlTxRef>
				</document:TxInfAndSts>
			</document:FIToFIPmtStsRpt>
		</document:Document>
	</FPEnvelope>]]></con:responseContent></con:response><con:response name="REJECTED" id="ddd8fb1b-c60a-4b1e-9ae1-deaf86bac4e0" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[1]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:Nm")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[2]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[4]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Prtry)[3]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Id)[8]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Prtry)[4]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:TxId")
requestContext.AccptncDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:AccptncDtTm")</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:payment_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>0492058059150981234567899</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>${today1}</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.008.001.10</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>0492058059150981234567899</document:MsgId>
					<document:CreDtTm>${today2}</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.008.001.10</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
            <document:TxInfAndSts>
                <document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
                <document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
                <document:TxSts>RJCT</document:TxSts>
                <document:StsRsnInf>
                    <document:Orgtr>
                        <document:Id>
                            <document:OrgId>
                                <document:Othr>
                                    <document:Id>FP</document:Id>
                                </document:Othr>
                            </document:OrgId>
                        </document:Id>
                    </document:Orgtr>
                    <document:Rsn>
                        <document:Prtry>ERRR</document:Prtry>
                    </document:Rsn>
                    <document:AddtlInf>TechnicalError</document:AddtlInf>
                </document:StsRsnInf>
                <document:AccptncDtTm>${AccptncDtTm}</document:AccptncDtTm>
                <document:OrgnlTxRef>
                    <document:IntrBkSttlmAmt Ccy="MGA">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
                    <document:Amt>
                        <document:InstdAmt Ccy="MGA">${InstdAmt}</document:InstdAmt>
                    </document:Amt>
                    <document:Dbtr>
                    <document:Pty>
                        <document:Nm>${Nm}</document:Nm>
                        <document:PstlAdr>
                            <document:AdrLine>${AdrLine}</document:AdrLine>
                        </document:PstlAdr>
                        </document:Pty>
                    </document:Dbtr>
                    <document:DbtrAcct>
                        <document:Id>
                            <document:Othr>
                                <document:Id>${Id5}</document:Id>
                                <document:SchmeNm>
                                    <document:Prtry>${Prtry3}</document:Prtry>
                                </document:SchmeNm>
                            </document:Othr>
                        </document:Id>
                    </document:DbtrAcct>
                    <document:CdtrAcct>
                        <document:Id>
                            <document:Othr>
                                <document:Id>${Id8}</document:Id>
                                <document:SchmeNm>
                                    <document:Prtry>${Prtry4}</document:Prtry>
                                </document:SchmeNm>
                            </document:Othr>
                        </document:Id>
                    </document:CdtrAcct>
                </document:OrgnlTxRef>
            </document:TxInfAndSts>
        </document:FIToFIPmtStsRpt>
    </document:Document>
</FPEnvelope>]]></con:responseContent></con:response><con:response name="TIMEOUT" id="b4cfa388-9b6e-45ac-9224-fe324140c1fb" httpResponseStatus="504"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[1]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:Nm")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[2]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[4]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Prtry)[3]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Id)[8]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Prtry)[4]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:TxId")
requestContext.AccptncDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:AccptncDtTm")</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:payment_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>${today1}</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.008.001.10</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>${Id11}${today}</document:MsgId>
					<document:CreDtTm>${today2}</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.008.001.10</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
				<document:TxInfAndSts>
					<document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
					<document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
					<document:TxSts>RJCT</document:TxSts>
					 <document:StsRsnInf>
                    <document:Orgtr>
                        <document:Id>
                            <document:OrgId>
                                <document:Othr>
                                    <document:Id>FP</document:Id>
                                </document:Othr>
                            </document:OrgId>
                        </document:Id>
                    </document:Orgtr>
                    <document:Rsn>
                        <document:Prtry>MISS</document:Prtry>
                    </document:Rsn>
                    <document:AddtlInf>Missing</document:AddtlInf>
                </document:StsRsnInf>
					<document:AccptncDtTm>$(AccptncDtTm)</document:AccptncDtTm>
					<document:OrgnlTxRef>
						<document:IntrBkSttlmAmt Ccy="MGA">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
						<document:Amt>
							<document:InstdAmt Ccy="MGA">${InstdAmt}</document:InstdAmt>
						</document:Amt>
						<document:Dbtr>
						<document:Pty>
							<document:Nm>${Nm}</document:Nm>
							<document:PstlAdr>
								<document:AdrLine>${AdrLine}</document:AdrLine>
							</document:PstlAdr>
							</document:Pty>
						</document:Dbtr>
						<document:DbtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id5}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry3}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:DbtrAcct>
						<document:CdtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id8}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry4}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:CdtrAcct>
					</document:OrgnlTxRef>
				</document:TxInfAndSts>
			</document:FIToFIPmtStsRpt>
		</document:Document>
	</FPEnvelope>]]></con:responseContent></con:response><con:response name="NotificationResponce" id="15a16f07-fc2c-4f78-9b1a-e1085498f6a2" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.AccptncDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:AccptncDtTm")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[2]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:Nm")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[1]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10'  (//document:Id)[4]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Prtry)[3]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Id)[8]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' (//document:Prtry)[4]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.008.001.10' //document:TxId")
</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:payment_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>2022-11-08T10:00:00.000Z</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.008.001.10</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>${Id11}${today}</document:MsgId>
					<document:CreDtTm>2022-11-08T13:00:00.000+03:00</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.008.001.10</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
				<document:TxInfAndSts>
					<document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
					<document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
					<document:TxSts>ACSC</document:TxSts>
					<document:AccptncDtTm>${AccptncDtTm}</document:AccptncDtTm>
					<document:OrgnlTxRef>
						<document:IntrBkSttlmAmt Ccy="MGA">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
						<document:Amt>
							<document:InstdAmt Ccy="MGA">${InstdAmt}</document:InstdAmt>
						</document:Amt>
						<document:Dbtr>
						<document:Pty>
							<document:Nm>${Nm}</document:Nm>
							<document:PstlAdr>
								<document:AdrLine>${AdrLine}</document:AdrLine>
							</document:PstlAdr>
							</document:Pty>
						</document:Dbtr>
						<document:DbtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id5}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry3}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:DbtrAcct>
						<document:CdtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id8}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry4}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:CdtrAcct>
					</document:OrgnlTxRef>
				</document:TxInfAndSts>
			</document:FIToFIPmtStsRpt>
		</document:Document>
	</FPEnvelope>]]></con:responseContent></con:response></con:restMockAction><con:restMockAction name="PaymentNotification" method="POST" resourcePath="/PaymentNotification" id="0b24518b-54ff-49c0-8afb-6cf3cdd5a0f5"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="PaymentNotificationResponse" id="a5bed3f2-a2f9-4da5-95c6-b09a518621f6" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.AccptncDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' //document:AccptncDtTm")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12'  (//document:Id)[2]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' //document:Nm")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12'  (//document:Id)[1]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12'  (//document:Id)[4]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' (//document:Prtry)[1]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' (//document:Id)[6]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' (//document:Prtry)[2]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12' //document:OrgnlTxId")
</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:payment_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>${today1}</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>${Id11}${today}</document:MsgId>
					<document:CreDtTm>${today2}</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.002.001.12</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
				<document:TxInfAndSts>
					<document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
					<document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
					<document:TxSts>ACSC</document:TxSts>
					<document:AccptncDtTm>${AccptncDtTm}</document:AccptncDtTm>
					<document:OrgnlTxRef>
						<document:IntrBkSttlmAmt Ccy="YER">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
						<document:Amt>
							<document:InstdAmt Ccy="YER">${InstdAmt}</document:InstdAmt>
						</document:Amt>
						<document:Dbtr>
						<document:Pty>
							<document:Nm>${Nm}</document:Nm>
							<document:PstlAdr>
								<document:AdrLine>${AdrLine}</document:AdrLine>
							</document:PstlAdr>
							</document:Pty>
						</document:Dbtr>
						<document:DbtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id5}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry3}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:DbtrAcct>
						<document:CdtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id8}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry4}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:CdtrAcct>
					</document:OrgnlTxRef>
				</document:TxInfAndSts>
			</document:FIToFIPmtStsRpt>
		</document:Document>
	</FPEnvelope>]]></con:responseContent></con:response></con:restMockAction><con:restMockAction name="echo" method="POST" resourcePath="/echo" id="5b6f448d-f676-49b5-8658-a0c20efd7248"><con:settings/><con:defaultResponse>EchoResponse</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="EchoResponse" id="7720ef75-07b0-4f45-8709-ec481f5a5533" httpResponseStatus="200"><con:settings/><con:responseContent>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?></con:responseContent></con:response></con:restMockAction><con:restMockAction name="/BulkVerification" method="POST" resourcePath="/BulkVerification" id="57c6f35c-ab70-4a41-a5ba-941ec3942027"><con:settings/><con:defaultResponse>SUCCESS</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="SUCCESS" id="75811334-d150-44b1-bb88-419b8c7cdd20" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:payment_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>${today1}</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.004.001.11</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>${Id11}${today}</document:MsgId>
					<document:CreDtTm>${today2}</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.004.001.10</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
				<document:TxInfAndSts>
					<document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
					<document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
					<document:TxSts>ACSC</document:TxSts>
					<document:AccptncDtTm>${AccptncDtTm}</document:AccptncDtTm>
					<document:OrgnlTxRef>
						<document:IntrBkSttlmAmt Ccy="MGA">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
						<document:Amt>
							<document:InstdAmt Ccy="MGA">${InstdAmt}</document:InstdAmt>
						</document:Amt>
						<document:Dbtr>
						<document:Pty>
							<document:Nm>${Nm}</document:Nm>
							<document:PstlAdr>
								<document:AdrLine>${AdrLine}</document:AdrLine>
							</document:PstlAdr>
							</document:Pty>
						</document:Dbtr>
						<document:DbtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id5}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry3}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:DbtrAcct>
						<document:CdtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id8}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry4}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:CdtrAcct>
					</document:OrgnlTxRef>
				</document:TxInfAndSts>
			</document:FIToFIPmtStsRpt>
		</document:Document>
	</FPEnvelope>]]></con:responseContent></con:response></con:restMockAction><con:restMockAction name="DirectDebit" method="POST" resourcePath="/DirectDebit" id="c52ab3f7-9200-48e5-a7b0-3d644e634669"><con:settings/><con:defaultResponse>SUCCESS</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent )
def  MsgId  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
def  Acct  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Id)[7]")
if ( Acct.matches( '1234567890')) 
{
    context.ResultResponse = "SUCCESS"
}

else if ( Acct.matches( '777564035')) 
{
	
    context.ResultResponse = "SUCCESS"
}
else if ( Acct.matches( 'R123456789111')) 
{
	
    context.ResultResponse = "SUCCESS"
}
else if ( Acct.matches( '131234567890')) 
{
	sleep(15000)
    context.ResultResponse = "TIMEOUT"
}
else 
{
	
     context.ResultResponse = "REJECTED"
}</con:dispatchPath><con:response name="SUCCESS" id="aed8d60c-2cc8-4209-9346-f1179ee4efcf" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[2]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Nm)[2]")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[1]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[7]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Prtry)[2]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Id)[4]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Prtry)[1]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:TxId")</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:direct_debit_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>${today1}</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.008.001.10</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>${Id11}${today}</document:MsgId>
					<document:CreDtTm>${today2}</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.003.001.09</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
				<document:TxInfAndSts>
					<document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
					<document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
					<document:TxSts>ACSC</document:TxSts>
					<document:OrgnlTxRef>
						<document:IntrBkSttlmAmt Ccy="MGA">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
						<document:Amt>
							<document:InstdAmt Ccy="MGA">${InstdAmt}</document:InstdAmt>
						</document:Amt>
						<document:Dbtr>
						<document:Pty>
							<document:Nm>${Nm}</document:Nm>
							<document:PstlAdr>
								<document:AdrLine>${AdrLine}</document:AdrLine>
							</document:PstlAdr>
							</document:Pty>
						</document:Dbtr>
						<document:DbtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id5}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry3}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:DbtrAcct>
						<document:CdtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id8}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry4}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:CdtrAcct>
					</document:OrgnlTxRef>
				</document:TxInfAndSts>
			</document:FIToFIPmtStsRpt>
		</document:Document>
	</FPEnvelope>]]></con:responseContent></con:response><con:response name="REJECTED" id="386e478d-03fe-4a6b-ac26-291ca8275f4a" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.AccptncDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:AccptncDtTm")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[2]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Nm)[2]")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[1]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[6]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Prtry)[4]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Id)[8]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Prtry)[4]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:TxId")</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:direct_debit_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>0492058059150981234567899</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>${today1}</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.008.001.10</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>0492058059150981234567899</document:MsgId>
					<document:CreDtTm>${today2}</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.008.001.10</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
            <document:TxInfAndSts>
                <document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
                <document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
                <document:TxSts>RJCT</document:TxSts>
                <document:StsRsnInf>
                    <document:Orgtr>
                        <document:Id>
                            <document:OrgId>
                                <document:Othr>
                                    <document:Id>FP</document:Id>
                                </document:Othr>
                            </document:OrgId>
                        </document:Id>
                    </document:Orgtr>
                    <document:Rsn>
                        <document:Prtry>ERRR</document:Prtry>
                    </document:Rsn>
                    <document:AddtlInf>TechnicalError</document:AddtlInf>
                </document:StsRsnInf>
                <document:AccptncDtTm>${AccptncDtTm}</document:AccptncDtTm>
                <document:OrgnlTxRef>
                    <document:IntrBkSttlmAmt Ccy="MGA">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
                    <document:Amt>
                        <document:InstdAmt Ccy="MGA">${InstdAmt}</document:InstdAmt>
                    </document:Amt>
                    <document:Dbtr>
                    <document:Pty>
                        <document:Nm>${Nm}</document:Nm>
                        <document:PstlAdr>
                            <document:AdrLine>${AdrLine}</document:AdrLine>
                        </document:PstlAdr>
                        </document:Pty>
                    </document:Dbtr>
                    <document:DbtrAcct>
                        <document:Id>
                            <document:Othr>
                                <document:Id>${Id5}</document:Id>
                                <document:SchmeNm>
                                    <document:Prtry>${Prtry3}</document:Prtry>
                                </document:SchmeNm>
                            </document:Othr>
                        </document:Id>
                    </document:DbtrAcct>
                    <document:CdtrAcct>
                        <document:Id>
                            <document:Othr>
                                <document:Id>${Id8}</document:Id>
                                <document:SchmeNm>
                                    <document:Prtry>${Prtry4}</document:Prtry>
                                </document:SchmeNm>
                            </document:Othr>
                        </document:Id>
                    </document:CdtrAcct>
                </document:OrgnlTxRef>
            </document:TxInfAndSts>
        </document:FIToFIPmtStsRpt>
    </document:Document>
</FPEnvelope>]]></con:responseContent></con:response><con:response name="TIMEOUT" id="b3e8c5f6-026e-4d05-92d9-4c4a8e76da52" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.AccptncDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:AccptncDtTm")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[2]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Nm)[2]")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[1]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[6]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Prtry)[4]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Id)[8]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Prtry)[4]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:TxId")</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:direct_debit_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>${today1}</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.008.001.10</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>${Id11}${today}</document:MsgId>
					<document:CreDtTm>${today2}</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.008.001.10</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
				<document:TxInfAndSts>
					<document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
					<document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
					<document:TxSts>RJCT</document:TxSts>
					 <document:StsRsnInf>
                    <document:Orgtr>
                        <document:Id>
                            <document:OrgId>
                                <document:Othr>
                                    <document:Id>FP</document:Id>
                                </document:Othr>
                            </document:OrgId>
                        </document:Id>
                    </document:Orgtr>
                    <document:Rsn>
                        <document:Prtry>MISS</document:Prtry>
                    </document:Rsn>
                    <document:AddtlInf>Missing</document:AddtlInf>
                </document:StsRsnInf>
					<document:AccptncDtTm>$(AccptncDtTm)</document:AccptncDtTm>
					<document:OrgnlTxRef>
						<document:IntrBkSttlmAmt Ccy="MGA">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
						<document:Amt>
							<document:InstdAmt Ccy="MGA">${InstdAmt}</document:InstdAmt>
						</document:Amt>
						<document:Dbtr>
						<document:Pty>
							<document:Nm>${Nm}</document:Nm>
							<document:PstlAdr>
								<document:AdrLine>${AdrLine}</document:AdrLine>
							</document:PstlAdr>
							</document:Pty>
						</document:Dbtr>
						<document:DbtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id5}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry3}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:DbtrAcct>
						<document:CdtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id8}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry4}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:CdtrAcct>
					</document:OrgnlTxRef>
				</document:TxInfAndSts>
			</document:FIToFIPmtStsRpt>
		</document:Document>
	</FPEnvelope>]]></con:responseContent></con:response><con:response name="NotificationResponse" id="f8c279a0-0fb6-4b8a-b710-37dc99d4a2a7" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.AccptncDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:AccptncDtTm")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[2]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Nm)[2]")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[1]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09'  (//document:Id)[6]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Prtry)[4]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Id)[8]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' (//document:Prtry)[4]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.003.001.09' //document:TxId")</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:direct_debit_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id11}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id12}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${Id11}${today}</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>2022-11-08T10:00:00.000Z</header:CreDt>
			<header:Rltd>
				<header:Fr>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id13}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:Fr>
				<header:To>
					<header:FIId>
						<header:FinInstnId>
							<header:Othr>
								<header:Id>${Id14}</header:Id>
							</header:Othr>
						</header:FinInstnId>
					</header:FIId>
				</header:To>
				<header:BizMsgIdr>${BizMsgIdr}</header:BizMsgIdr>
				<header:MsgDefIdr>pacs.008.001.10</header:MsgDefIdr>
				<header:CreDt>${CreDt}</header:CreDt>
			</header:Rltd>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>${Id11}${today}</document:MsgId>
					<document:CreDtTm>2022-11-08T13:00:00.000+03:00</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.008.001.10</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
				<document:TxInfAndSts>
					<document:OrgnlEndToEndId>-</document:OrgnlEndToEndId>
					<document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
					<document:TxSts>ACSC</document:TxSts>
					<document:AccptncDtTm>${AccptncDtTm}</document:AccptncDtTm>
					<document:OrgnlTxRef>
						<document:IntrBkSttlmAmt Ccy="MGA">${IntrBkSttlmAmt}</document:IntrBkSttlmAmt>
						<document:Amt>
							<document:InstdAmt Ccy="MGA">${InstdAmt}</document:InstdAmt>
						</document:Amt>
						<document:Dbtr>
						<document:Pty>
							<document:Nm>${Nm}</document:Nm>
							<document:PstlAdr>
								<document:AdrLine>${AdrLine}</document:AdrLine>
							</document:PstlAdr>
							</document:Pty>
						</document:Dbtr>
						<document:DbtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id5}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry3}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:DbtrAcct>
						<document:CdtrAcct>
							<document:Id>
								<document:Othr>
									<document:Id>${Id8}</document:Id>
									<document:SchmeNm>
										<document:Prtry>${Prtry4}</document:Prtry>
									</document:SchmeNm>
								</document:Othr>
							</document:Id>
						</document:CdtrAcct>
					</document:OrgnlTxRef>
				</document:TxInfAndSts>
			</document:FIToFIPmtStsRpt>
		</document:Document>
	</FPEnvelope>]]></con:responseContent></con:response></con:restMockAction><con:restMockAction name="/PaymentReturn" method="POST" resourcePath="/PaymentReturn" id="8f996dd9-f54c-4100-a37c-c820ebdd9687"><con:settings/><con:defaultResponse>SUCCESS</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*&#13;
// Script dispatcher is used to select a response based on the incoming request.&#13;
// Here are few examples showing how to match based on path, query param, header and body&#13;
&#13;
// Match based on path&#13;
def requestPath = mockRequest.getPath()&#13;
log.info "Path: "+ requestPath&#13;
&#13;
if( requestPath.contains("json") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "JSON Response"&#13;
}&#13;
&#13;
&#13;
// Match based on query parameter&#13;
def queryString = mockRequest.getRequest().getQueryString()&#13;
log.info "QueryString: " + queryString&#13;
&#13;
if( queryString.contains("stockholm") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response Stockholm"&#13;
}&#13;
else if( queryString.contains("london") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response London"&#13;
}&#13;
&#13;
&#13;
// Match based on header&#13;
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")&#13;
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList&#13;
&#13;
if( acceptEncodingHeaderList.contains("gzip,deflate") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "GZiped Response"&#13;
}&#13;
&#13;
&#13;
// Match based on body&#13;
def requestBody = mockRequest.getRequestContent()&#13;
log.info "Request body: " + requestBody&#13;
&#13;
if( requestBody.contains("some data") )&#13;
{&#13;
    // return the name of the response you want to dispatch&#13;
    return "Response N"&#13;
}&#13;
*/&#13;
</con:dispatchPath><con:response name="SUCCESS" id="7846bff3-3805-4164-8a61-5c469c2fe3cd" httpResponseStatus="200"><con:settings/><con:script>requestContext.today = new Date().format("yyyyMMddHHmmssSSSSS")
requestContext.today1 = new Date().format("yyyy-MM-dd'T'hh:mm:ss.SSS'Z'")
requestContext.today2 = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")
def holder = new com.eviware.soapui.support.XmlHolder( mockRequest.requestContent)
requestContext.Id11  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.Id12  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id13  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[1]")
requestContext.Id14  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:Id)[2]")
requestContext.BizMsgIdr  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' //header:BizMsgIdr")
requestContext.AccptncDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' //document:AccptncDtTm")
requestContext.CreDt  = holder.getNodeValue ("declare namespace header='urn:iso:std:iso:20022:tech:xsd:head.001.001.03' (//header:CreDt)[1]")
requestContext.Id1  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11'  (//document:Id)[2]")
requestContext.OrgnlMsgId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' (//document:MsgId)[1]")
requestContext.OrgnlCreDtTm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' //document:CreDtTm")
requestContext.IntrBkSttlmAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' //document:IntrBkSttlmAmt")
requestContext.InstdAmt  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' //document:InstdAmt")
requestContext.Nm  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' (//document:Nm)[2]")
requestContext.AdrLine  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' //document:AdrLine")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11'  (//document:Id)[1]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11'  (//document:Id)[4]")
requestContext.Prtry3  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' (//document:Prtry)[4]")
requestContext.Id8  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' (//document:Id)[8]")
requestContext.Prtry4  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' (//document:Prtry)[4]")
requestContext.OrgnlTxId  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' //document:OrgnlTxId")
requestContext.Id2  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11'  (//document:Id)[1]")
requestContext.Id5  = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11'  (//document:Id)[4]")
requestContext.RtrdIntrBkSttlmAmt = holder.getNodeValue ("declare namespace document='urn:iso:std:iso:20022:tech:xsd:pacs.004.001.11' //document:RtrdIntrBkSttlmAmt")
</con:script><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FPEnvelope xmlns:header="urn:iso:std:iso:20022:tech:xsd:head.001.001.03" 
            xmlns:document="urn:iso:std:iso:20022:tech:xsd:pacs.002.001.12" 
            xmlns="urn:iso:std:iso:20022:tech:xsd:payment_cancellation_response">
  <header:AppHdr>
			<header:Fr>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id1}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:Fr>
			<header:To>
				<header:FIId>
					<header:FinInstnId>
						<header:Othr>
							<header:Id>${Id2}</header:Id>
						</header:Othr>
					</header:FinInstnId>
				</header:FIId>
			</header:To>
			<header:BizMsgIdr>${Id1}${today}</header:BizMsgIdr>
			<header:MsgDefIdr>pacs.002.001.12</header:MsgDefIdr>
			<header:CreDt>${today1}</header:CreDt>
		</header:AppHdr>
		<document:Document>
			<document:FIToFIPmtStsRpt>
				<document:GrpHdr>
					<document:MsgId>${Id1}${today}</document:MsgId>
					<document:CreDtTm>${today1}</document:CreDtTm>
					<document:InstgAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id1}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstgAgt>
					<document:InstdAgt>
						<document:FinInstnId>
							<document:Othr>
								<document:Id>${Id2}</document:Id>
							</document:Othr>
						</document:FinInstnId>
					</document:InstdAgt>
				</document:GrpHdr>
				<document:OrgnlGrpInfAndSts>
					<document:OrgnlMsgId>${OrgnlMsgId}</document:OrgnlMsgId>
					<document:OrgnlMsgNmId>pacs.004.001.11</document:OrgnlMsgNmId>
					<document:OrgnlCreDtTm>${OrgnlCreDtTm}</document:OrgnlCreDtTm>
				</document:OrgnlGrpInfAndSts>
				<document:TxInfAndSts>
					<document:OrgnlEndToEndId>${OrgnlTxId}</document:OrgnlEndToEndId>
					<document:OrgnlTxId>${OrgnlTxId}</document:OrgnlTxId>
					<document:TxSts>ACSC</document:TxSts>
					<document:AccptncDtTm>${today1}</document:AccptncDtTm>
					<document:OrgnlTxRef>
						<document:IntrBkSttlmAmt Ccy="ETB">${RtrdIntrBkSttlmAmt}</document:IntrBkSttlmAmt>
						<document:Amt>
							<document:InstdAmt Ccy="ETB">${RtrdIntrBkSttlmAmt}</document:InstdAmt>
						</document:Amt>
					</document:OrgnlTxRef>
				</document:TxInfAndSts>
			</document:FIToFIPmtStsRpt>
		</document:Document>
	</FPEnvelope>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:restMockService id="1f860b2d-72cd-4013-b965-9565a49b042c" port="8085" path="/" host="MOTASIM-NB" name="PaymentStatusResponse" docroot=""><con:settings/><con:properties/><con:restMockAction name="PaymentStatusInquiry" method="POST" resourcePath="/PaymentStatusInquiry" id="7d344a45-7867-460f-a0b8-0421ab501f8d"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="SUCCESS" id="ef35d66e-8305-46c1-ba8b-19e43bfa4bae" httpResponseStatus="200"><con:settings/><con:responseContent><![CDATA[<FPEnvelope> 
		<AppHdr>
			<Fr>
				<FIId>
					<FinInstnId>
						<Othr>
							<Id>FP</Id>
						</Othr>
					</FinInstnId>
				</FIId>
			</Fr>
			<To>
				<FIId>
					<FinInstnId>
						<Othr>
							<Id>040000000</Id>
						</Othr>
					</FinInstnId>
				</FIId>
			</To>
			<BizMsgIdr>28917726294</BizMsgIdr>
			<MsgDefIdr>pacs.002.001.12</MsgDefIdr>
			<CreDt>${CreDt1}</CreDt>
			<Rltd>
				<Fr>
					<FIId>
						<FinInstnId>
							<Othr>
								<Id>044525416</Id>
							</Othr>
						</FinInstnId>
					</FIId>
				</Fr>
				<To>
					<FIId>
						<FinInstnId>
							<Othr>
								<Id>FP</Id>
							</Othr>
						</FinInstnId>
					</FIId>
				</To>
				<BizMsgIdr>000000001</BizMsgIdr>
				<MsgDefIdr>pacs.008.001.10</MsgDefIdr>
				<CreDt>${CreDt2}</CreDt>
			</Rltd>
		</AppHdr>
		<Document>
			<FIToFIPmtStsRpt>
				<GrpHdr>
					<MsgId>348729758</MsgId>
					<CreDtTm>${CreDtTm}</CreDtTm>
					<InstgAgt>
						<FinInstnId>
							<Othr>
								<Id>040000000</Id>
							</Othr>
						</FinInstnId>
					</InstgAgt>
					<InstdAgt>
						<FinInstnId>
							<Othr>
								<Id>044525974</Id>
							</Othr>
						</FinInstnId>
					</InstdAgt>
				</GrpHdr>
				<OrgnlGrpInfAndSts>
					<OrgnlMsgId>000000002</OrgnlMsgId>
					<OrgnlMsgNmId>pacs.008.001.10</OrgnlMsgNmId>
					<OrgnlCreDtTm>2019-04-22T14:56:14.732+03:00</OrgnlCreDtTm>
				</OrgnlGrpInfAndSts>
				<TxInfAndSts>
					<OrgnlEndToEndId>-</OrgnlEndToEndId>
					<OrgnlTxId>044525416806117310096610000</OrgnlTxId>
					<TxSts>ACSC</TxSts>
					<AccptncDtTm>2019-04-22T14:56:14.732+03:00</AccptncDtTm>
					<OrgnlTxRef>
						<IntrBkSttlmAmt Ccy="RUB">${IntrBkSttlmAmt}</IntrBkSttlmAmt>
						<Amt>
							<InstdAmt Ccy="RUB">${InstdAmt}</InstdAmt>
						</Amt>
						<Dbtr>
							<Nm>${Nm}</Nm>
							<PstlAdr>
								<AdrLine>${AdrLine}</AdrLine>
							</PstlAdr>
						</Dbtr>
						<DbtrAcct>
							<Id>
								<Othr>
									<Id>${Id5}</Id>
									<SchmeNm>
										<Prtry>${Prtry3}</Prtry>
									</SchmeNm>
								</Othr>
							</Id>
						</DbtrAcct>
						<CdtrAcct>
							<Id>
								<Othr>
									<Id>${Id8}</Id>
									<SchmeNm>
										<Prtry>${Prtry4}</Prtry>
									</SchmeNm>
								</Othr>
							</Id>
						</CdtrAcct>
					</OrgnlTxRef>
				</TxInfAndSts>
			</FIToFIPmtStsRpt>
		</Document>
	</FPEnvelope>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>